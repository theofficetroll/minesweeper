[{"/home/mark/hackreactor/rpt23/rpt23-mini-apps-2/challenge_4/minesweeper/src/index.js":"1","/home/mark/hackreactor/rpt23/rpt23-mini-apps-2/challenge_4/minesweeper/src/App.js":"2","/home/mark/hackreactor/rpt23/rpt23-mini-apps-2/challenge_4/minesweeper/src/reportWebVitals.js":"3","/home/mark/hackreactor/rpt23/rpt23-mini-apps-2/challenge_4/minesweeper/src/components/game.jsx":"4","/home/mark/hackreactor/rpt23/rpt23-mini-apps-2/challenge_4/minesweeper/src/components/board.jsx":"5","/home/mark/hackreactor/rpt23/rpt23-mini-apps-2/challenge_4/minesweeper/src/components/cell.jsx":"6","/home/mark/hackreactor/rpt23/rpt23-mini-apps-2/challenge_4/minesweeper/src/components/helpers/boardState.js":"7","/home/mark/portfolio/minesweeper/src/index.js":"8","/home/mark/portfolio/minesweeper/src/reportWebVitals.js":"9","/home/mark/portfolio/minesweeper/src/App.js":"10","/home/mark/portfolio/minesweeper/src/components/game.jsx":"11","/home/mark/portfolio/minesweeper/src/components/board.jsx":"12","/home/mark/portfolio/minesweeper/src/components/cell.jsx":"13","/home/mark/portfolio/minesweeper/src/components/helpers/boardState.js":"14"},{"size":500,"mtime":1611890335207,"results":"15","hashOfConfig":"16"},{"size":171,"mtime":1613057027371,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":1611890335207,"results":"18","hashOfConfig":"16"},{"size":2290,"mtime":1613154723570,"results":"19","hashOfConfig":"16"},{"size":3479,"mtime":1613159830586,"results":"20","hashOfConfig":"16"},{"size":692,"mtime":1613159572289,"results":"21","hashOfConfig":"16"},{"size":3434,"mtime":1613159799002,"results":"22","hashOfConfig":"16"},{"size":500,"mtime":1611890335207,"results":"23","hashOfConfig":"24"},{"size":362,"mtime":1611890335207,"results":"25","hashOfConfig":"24"},{"size":171,"mtime":1613057027371,"results":"26","hashOfConfig":"24"},{"size":2290,"mtime":1613154723570,"results":"27","hashOfConfig":"24"},{"size":3609,"mtime":1624469753873,"results":"28","hashOfConfig":"24"},{"size":692,"mtime":1613159572289,"results":"29","hashOfConfig":"24"},{"size":3434,"mtime":1613159799002,"results":"30","hashOfConfig":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},"1gdtymq",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"1wks8ci",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"48"},"/home/mark/hackreactor/rpt23/rpt23-mini-apps-2/challenge_4/minesweeper/src/index.js",[],["62","63"],"/home/mark/hackreactor/rpt23/rpt23-mini-apps-2/challenge_4/minesweeper/src/App.js",[],"/home/mark/hackreactor/rpt23/rpt23-mini-apps-2/challenge_4/minesweeper/src/reportWebVitals.js",[],"/home/mark/hackreactor/rpt23/rpt23-mini-apps-2/challenge_4/minesweeper/src/components/game.jsx",[],"/home/mark/hackreactor/rpt23/rpt23-mini-apps-2/challenge_4/minesweeper/src/components/board.jsx",[],"/home/mark/hackreactor/rpt23/rpt23-mini-apps-2/challenge_4/minesweeper/src/components/cell.jsx",[],"/home/mark/hackreactor/rpt23/rpt23-mini-apps-2/challenge_4/minesweeper/src/components/helpers/boardState.js",["64","65","66","67","68","69","70"],"/home/mark/portfolio/minesweeper/src/index.js",[],["71","72"],"/home/mark/portfolio/minesweeper/src/reportWebVitals.js",[],"/home/mark/portfolio/minesweeper/src/App.js",[],"/home/mark/portfolio/minesweeper/src/components/game.jsx",[],"/home/mark/portfolio/minesweeper/src/components/board.jsx",[],"/home/mark/portfolio/minesweeper/src/components/cell.jsx",[],"/home/mark/portfolio/minesweeper/src/components/helpers/boardState.js",["73","74","75","76","77","78","79"],"const startBoardState = (height, width, mines) => {\n  let board = createEmptyBoard(width, height);\n  board = addMines(board, width, height, mines);\n  board = getNeighbours(board, width, height);\n\n  return board;\n};\n\nconst createEmptyBoard = (width, height) => {\n  let board = [];\n\n  for (let i = 0; i < width; i++) {\n    board.push([]);\n    for (let j = 0; j < height; j++) {\n      board[i][j] = {\n        x: i,\n        y: j,\n        isMine: false,\n        neighbour: 0,\n        isRevealed: false,\n        isEmpty: false,\n        isFlagged: false,\n      };\n    }\n  }\n  return board;\n};\n\nconst addMines = (board, width, height, mines) => {\n  let randomX, randomY, minesAdded = 0;\n  let updatedBoard = [...board];\n\n  while (minesAdded < mines) {\n    randomX = randomNumber(width);\n    randomY = randomNumber(height);\n    if(!board[randomX][randomY].isMine) {\n      updatedBoard[randomX][randomY].isMine = true;\n      minesAdded++;\n    }\n  }\n\n  return updatedBoard;\n};\n\nconst getNeighbours = (board, width, height) => {\n  let updatedBoard = [...board];\n  let mines = 0;\n  let neighbours = null;\n\n  for (let i = 0; i < width; i++) {\n    for (let j = 0; j < height; j++) {\n      if (!board[i][j].isMine) {\n        neighbours = boardWalk(board, board[i][j].x, board[i][j].y, width, height);\n        neighbours.map(value => {\n          if(value.isMine) {\n            mines++;\n          }\n        });\n        if (mines === 0) {\n          updatedBoard[i][j].isEmpty = true;\n        }\n        board[i][j].neighbour = mines;\n        neighbours = null;\n        mines = 0;\n      }\n    }\n  }\n  console.log(updatedBoard);\n  return updatedBoard;\n};\n\nconst boardWalk = (board, x, y, width, height) => {\n  let neighbours = [];\n\n  // upper row\n  if (x > 0 && y > 0) {\n    neighbours.push(board[x - 1][y - 1]);\n  };\n  if (y > 0) {\n    neighbours.push(board[x][y - 1]);\n  };\n  if (x < (width -1) && y > 0) {\n    neighbours.push(board[x + 1][y - 1]);\n  };\n\n  // same row\n  if (x > 0) {\n    neighbours.push(board[x - 1][y]);\n  }\n  if (x < (width -1)) {\n    neighbours.push(board[x + 1][y]);\n  };\n\n  //lower row\n  if (y < (height - 1) && x > 0) {\n    neighbours.push(board[x - 1][y + 1]);\n  };\n  if (y < (height - 1)) {\n    neighbours.push(board[x][y + 1]);\n  };\n  if (y < (height -1) && x < (width - 1)) {\n    neighbours.push(board[x + 1][y + 1]);\n  };\n\n  return neighbours;\n};\n\nconst randomNumber = (seed) => {\n  return Math.floor(Math.random() * seed);\n};\n\nconst revealBoard = (board) => {\n  let updatedBoard = [...board];\n  updatedBoard.map(boardRow => {\n    boardRow.map(cell => {\n      cell.isRevealed = true;\n    });\n  });\n  return updatedBoard;\n};\n\nconst revealEmpty = (board, x, y, width, height) => {\n  let revealZone = boardWalk(board, x, y, width, height);\n  let updatedBoard = [...board];\n  revealZone.map(value => {\n    if (!value.isFlagged && !value.isRevealed && (value.isEmpty || !value.isMine)) {\n      updatedBoard[value.x][value.y].isRevealed = true;\n      if (value.isEmpty) {\n        revealEmpty(board, value.x, value.y, width, height);\n      }\n    }\n  });\n  return updatedBoard;\n};\n\nconst countRevealed = (board) => {\n  let count = 0;\n  board.map(boardRow => {\n    boardRow.map(cell => {\n      if(cell.isRevealed === true) {\n        count++\n      }\n    })\n  })\n  return count;\n}\n\nexport {\n  addMines,\n  boardWalk,\n  countRevealed,\n  createEmptyBoard,\n  getNeighbours,\n  randomNumber,\n  revealBoard,\n  revealEmpty,\n  startBoardState\n};\n",{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","severity":1,"message":"85","line":54,"column":24,"nodeType":"86","messageId":"87","endLine":58,"endColumn":10},{"ruleId":"88","severity":1,"message":"89","line":54,"column":30,"nodeType":"86","messageId":"90","endLine":54,"endColumn":32},{"ruleId":"88","severity":1,"message":"89","line":114,"column":29,"nodeType":"86","messageId":"90","endLine":114,"endColumn":31},{"ruleId":"88","severity":1,"message":"89","line":115,"column":23,"nodeType":"86","messageId":"90","endLine":115,"endColumn":25},{"ruleId":"88","severity":1,"message":"89","line":125,"column":24,"nodeType":"86","messageId":"90","endLine":125,"endColumn":26},{"ruleId":"88","severity":1,"message":"89","line":138,"column":22,"nodeType":"86","messageId":"90","endLine":138,"endColumn":24},{"ruleId":"88","severity":1,"message":"89","line":139,"column":23,"nodeType":"86","messageId":"90","endLine":139,"endColumn":25},{"ruleId":"80","replacedBy":"91"},{"ruleId":"82","replacedBy":"92"},{"ruleId":"84","severity":1,"message":"85","line":54,"column":24,"nodeType":"86","messageId":"87","endLine":58,"endColumn":10},{"ruleId":"88","severity":1,"message":"89","line":54,"column":30,"nodeType":"86","messageId":"90","endLine":54,"endColumn":32},{"ruleId":"88","severity":1,"message":"89","line":114,"column":29,"nodeType":"86","messageId":"90","endLine":114,"endColumn":31},{"ruleId":"88","severity":1,"message":"89","line":115,"column":23,"nodeType":"86","messageId":"90","endLine":115,"endColumn":25},{"ruleId":"88","severity":1,"message":"89","line":125,"column":24,"nodeType":"86","messageId":"90","endLine":125,"endColumn":26},{"ruleId":"88","severity":1,"message":"89","line":138,"column":22,"nodeType":"86","messageId":"90","endLine":138,"endColumn":24},{"ruleId":"88","severity":1,"message":"89","line":139,"column":23,"nodeType":"86","messageId":"90","endLine":139,"endColumn":25},"no-native-reassign",["93"],"no-negated-in-lhs",["94"],"no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'mines'.","ArrowFunctionExpression","unsafeRefs","array-callback-return","Array.prototype.map() expects a return value from arrow function.","expectedInside",["93"],["94"],"no-global-assign","no-unsafe-negation"]